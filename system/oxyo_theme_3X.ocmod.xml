<?xml version="1.0" encoding="UTF-8"?>
<modification>
    <name>Oxyo Theme</name>
    <code>oxyo_theme</code>
    <version>1.2.8.0</version>
    <author><![CDATA[<span style="color:#0066cc"><b>XDomus.ru</b></span>]]></author>
    <link>//oxyo.ru/</link>
    <extension_install_id>Oxyo Theme</extension_install_id>
    <file path="catalog/controller/common/header.php">
        <operation error="log">
            <search><![CDATA[
                $data['title'] = $this->document->getTitle();
            ]]></search>
            <add position="after"><![CDATA[
                if ($this->config->get('theme_default_directory') == 'oxyo') {
                    include(DIR_APPLICATION . 'controller/extension/oxyo/header_helper.php');
                }
            ]]></add>
        </operation>
    </file>

    <file path="catalog/controller/common/footer.php">
        <operation error="log">
            <search><![CDATA[
                $this->load->model('catalog/information');
            ]]></search>
            <add position="before"><![CDATA[
                // Oxyo Features
                if ($this->config->get('theme_default_directory') == 'oxyo') {
                    include(DIR_APPLICATION . 'controller/extension/oxyo/footer_helper.php');
                }
            ]]></add>
        </operation>
    </file>

    <file path="catalog/controller/product/product.php">
        <operation error="log">
            <search><![CDATA[
                $data['products'] = array();
            ]]></search>
            <add position="before"><![CDATA[
                if ($this->config->get('theme_default_directory') == 'oxyo') {
                    include(DIR_APPLICATION . 'controller/extension/oxyo/product_helper.php');
                }
            ]]></add>
        </operation>
        <operation error="log">
            <search><![CDATA[
                $data['thumb'] = $
            ]]></search>
            <add position="before"><![CDATA[
                $data['thumb_sm'] = $this->model_tool_image->resize($product_info['image'], $this->config->get('theme_default_image_additional_width'), $this->config->get('theme_default_image_additional_height'));
            ]]></add>
        </operation>
        <operation error="log">
            <search><![CDATA[
                'thumb' => $
            ]]></search>
            <add position="before"><![CDATA[
                'thumb_lg' => $this->model_tool_image->resize($result['image'], $this->config->get('theme_default_image_thumb_width'), $this->config->get('theme_default_image_thumb_height')),
            ]]></add>
        </operation>
        <operation error="log">
            <search><![CDATA[
                if ($product_info) {
            ]]></search>
            <add position="after"><![CDATA[
                // Oxyo breadcrumbs start
                $breadcrumb_full_path = $this->config->get('oxyo_breadcrumbs_full_path');
                if ($this->config->get('theme_default_directory') == 'oxyo' && isset($breadcrumb_full_path) && $breadcrumb_full_path == 1) {
                    $data['breadcrumbs'] = [];

                    // Always include home
                    $data['breadcrumbs'][] = array(
                        'text' => $this->language->get('text_home'),
                        'href' => $this->url->link('common/home')
                    );

                    // Get all categories of this product
                    $product_categories = $this->model_catalog_product->getCategories($this->request->get['product_id']);

                    $breadcrumbs_done = [];

                    foreach ($product_categories as $product_category) {
                        $path = $this->getPathByCategoryId($product_category['category_id']);

                        if ($path) {
                            $parts = explode('_', $path);
                            $accumulated_path = [];

                            foreach ($parts as $path_id) {
                                $accumulated_path[] = $path_id;
                                $accumulated = implode('_', $accumulated_path);

                                // Avoid duplicates
                                if (!in_array($accumulated, $breadcrumbs_done)) {
                                    $category_info = $this->model_catalog_category->getCategory($path_id);

                                    if ($category_info) {
                                        $data['breadcrumbs'][] = array(
                                            'text' => $category_info['name'],
                                            'href' => $this->url->link('product/category', 'path=' . $accumulated)
                                        );
                                        $breadcrumbs_done[] = $accumulated;
                                    }
                                }
                            }
                        }
                    }
                }
            ]]></add>
        </operation>
        <operation error="log">
            <search><![CDATA[
                public function getRecurringDescription()
            ]]></search>
            <add position="before"><![CDATA[
                protected function getPathByCategoryId($category_id)
                    {
                        $this->load->model('catalog/category');
                        $path = [];

                        while ($category_id) {
                            $category = $this->model_catalog_category->getCategory($category_id);
                            if ($category) {
                                $path[] = $category['category_id'];
                                $category_id = $category['parent_id'];
                            } else {
                                break;
                            }
                        }

                        if ($path) {
                            return implode('_', array_reverse($path));
                        } else {
                            return '';
                        }
                    }
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/product/manufacturer.php">
        <operation error="log">
            <search><![CDATA[
                $data['products'] = array();
            ]]></search>
            <add position="before"><![CDATA[
                if ($this->config->get('theme_default_directory') == 'oxyo') {
                    include(DIR_APPLICATION . 'controller/extension/oxyo/product_helper.php');
                }
            ]]></add>
        </operation>
        <operation error="log">
            <search><![CDATA[
                $data['thumb'] = $
            ]]></search>
            <add position="before"><![CDATA[
                $data['thumb_sm'] = $this->model_tool_image->resize($product_info['image'], $this->config->get('theme_default_image_additional_width'), $this->config->get('theme_default_image_additional_height'));
            ]]></add>
        </operation>
        <operation error="log">
            <search><![CDATA[
                'thumb' => $
            ]]></search>
            <add position="before"><![CDATA[
                'thumb_lg' => $this->model_tool_image->resize($result['image'], $this->config->get('theme_default_image_thumb_width'), $this->config->get('theme_default_image_thumb_height')),
            ]]></add>
        </operation>
    </file>
    
    <file path="catalog/controller/product/category.php">
        <operation error="log">
            <search><![CDATA[
                $data['categories'][] = array(
            ]]></search>
            <add position="before"><![CDATA[
                //Oxyo start
                if ($result['image']) {
                    $image = $this->model_tool_image->resize($result['image'], $this->config->get('subcat_image_width'), $this->config->get('subcat_image_height'));
                } else {
                    $image = $this->model_tool_image->resize('placeholder.png', $this->config->get('subcat_image_width'), $this->config->get('subcat_image_height'));
                }
            ]]></add>
        </operation>
        <operation error="log">
            <search><![CDATA[
                $data['categories'][] = array(
            ]]></search>
            <add position="after"><![CDATA[
                //Oxyo start
                'thumb' => $image,
            ]]></add>
        </operation>
        <operation error="log">
            <search><![CDATA[
                $data['categories'][] = array(
            ]]></search>
            <add position="after"><![CDATA[
                //Oxyo start
                'thumb' => $image,
            ]]></add>
        </operation>
    </file>

    <file path="catalog/controller/product/{category,product,manufacturer,search,special}.php">
        <operation error="log">
            <search><![CDATA[
                $data['column_left'] = $this->load->controller('common/column_left');
            ]]></search>
            <add position="before"><![CDATA[
                //Oxyo start
                if ($this->config->get('theme_default_directory') == 'oxyo') {
                    $data['position_category_top'] = $this->load->controller('extension/oxyo/position_category_top');
                }
            ]]></add>
        </operation>
        <operation error="log">
            <search><![CDATA[
                $this->load->model('catalog/product');
            ]]></search>
            <add position="after"><![CDATA[
                // Oxyo start
                $this->load->model('extension/oxyo/oxyo');
                $this->load->language('oxyo/oxyo_theme');
                $data['oxyo_button_quickview'] = $this->language->get('oxyo_button_quickview');
                $data['oxyo_text_new'] = $this->language->get('oxyo_text_new');
                $data['oxyo_text_days'] = $this->language->get('oxyo_text_days');
                $data['oxyo_text_hours'] = $this->language->get('oxyo_text_hours');
                $data['oxyo_text_mins'] = $this->language->get('oxyo_text_mins');
                $data['oxyo_text_secs'] = $this->language->get('oxyo_text_secs');
                $data['category_thumb_status'] = $this->config->get('category_thumb_status');
                $data['category_subs_status'] = $this->config->get('category_subs_status');
                $data['countdown_status'] = $this->config->get('countdown_status');
                $data['oxyo_subs_grid'] = $this->config->get('oxyo_subs_grid');
                $data['oxyo_prod_grid'] = $this->config->get('oxyo_prod_grid');
                $data['oxyo_list_style'] = $this->config->get('oxyo_list_style');

                $data['default_button_cart'] = $this->language->get('button_cart');
                $data['direction'] = $this->language->get('direction');
                if ($this->language->get('direction') == 'rtl') { $data['tooltip_align'] = 'right'; } else { $data['tooltip_align'] = 'left'; }

                $current_language_id = $this->config->get('config_language_id');

                $sticker_sale = $this->config->get('sticker_sale');
                $sticker_sale_status = isset($sticker_sale['status']) ? $sticker_sale['status'] : 0;
                $data['sticker_sale_text'] = isset($sticker_sale['text'][$current_language_id]) ? $sticker_sale['text'][$current_language_id] : '';

                $sticker_new = $this->config->get('sticker_new');
                $sticker_new_status = isset($sticker_new['status']) ? $sticker_new['status'] : 0;
                $data['sticker_new_text'] = isset($sticker_new['text'][$current_language_id]) ? $sticker_new['text'][$current_language_id] : '';

                $sticker_stock = $this->config->get('sticker_stock');
                $sticker_stock_status = isset($sticker_stock['status']) ? $sticker_stock['status'] : 0;
                $data['sticker_stock_text'] = isset($sticker_stock['text'][$current_language_id]) ? $sticker_stock['text'][$current_language_id] : '';

                $data['oxyo_text_out_of_stock'] = $this->language->get('oxyo_text_out_of_stock');
                // Oxyo end
            ]]></add>
        </operation>
        <operation error="log">
            <search><![CDATA[
                $data['products'][] = array(
            ]]></search>
            <add position="before"><![CDATA[
                $image2 = $this->model_catalog_product->getProductImages($result['product_id']);
                if(isset($image2[0]['image']) && !empty($image2[0]['image']) && $this->config->get('oxyo_thumb_swap')){
                    if (isset($this->request->get['route']) == 'product/product' && isset($this->request->get['product_id'])) {
                        $image2 = $this->model_tool_image->resize($image2[0]['image'], $this->config->get('theme_default_image_related_width'), $this->config->get('theme_default_image_related_height'));
                    } else {
                        $image2 = $this->model_tool_image->resize($image2[0]['image'], $this->config->get('theme_default_image_product_width'), $this->config->get('theme_default_image_product_height'));
                    }
                } else {
                    $image2 = false;
                }
                if ((float)$result['special']) {
                    $date_end = $this->model_extension_oxyo_oxyo->getSpecialEndDate($result['product_id']);
                } else {
                    $date_end = false;
                }

                $sale_badge = false;
                if ((float)$result['special'] && $sticker_sale_status) {
                    if ($sticker_sale['discount_status'] == 1) {
                        $sale_badge = $data['sticker_sale_text'] . ' -' . number_format(((($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax'))) - ($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')))) / (($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax'))) / 100)), 0, ',', '.') . '%';
                    } else {
                        $sale_badge = $data['sticker_sale_text'];
                    }
                }

                $new_badge = false;
                if ($sticker_new_status) {
                    if (strtotime($result['date_available']) > strtotime('-' . $sticker_new['days'] . ' day')) {
                        $new_badge = $data['sticker_new_text'];
                    }
                }
            ]]></add>
        </operation>
        <operation error="log">
            <search><![CDATA[
                $data['products'][] = array(
            ]]></search>
            <add position="after"><![CDATA[
                'thumb2'        => $image2,
                'quantity'      => $result['quantity'],
                'sale_badge'    => $sale_badge,
                'sale_end_date' => isset($date_end['date_end']) ? $date_end['date_end'] : false,
                'new_badge'     => $new_badge,
            ]]></add>
        </operation>
    </file>

    <file path="catalog/controller/information/contact.php">
        <operation error="log">
            <search><![CDATA[$data['store'] = $this->config->get('config_name');]]></search>
            <add position="before"><![CDATA[
            $data['oxyo_map_style'] = $this->config->get('oxyo_map_style');
            $data['oxyo_map_lat'] = $this->config->get('oxyo_map_lat');
            $data['oxyo_map_lon'] = $this->config->get('oxyo_map_lon');
            if ($this->config->get('oxyo_map_style')) {
                $this->document->addScript('https://maps.google.com/maps/api/js?sensor=false&libraries=geometry&v=3.24&key=' . $this->config->get('oxyo_map_api') . '');
                $this->document->addScript('catalog/view/theme/oxyo/js/maplace.min.js');
            }
            ]]></add>
        </operation>
    </file>

    <file path="catalog/controller/startup/seo_url.php">
        <operation>
            <search><![CDATA[
            if ($query->row['query'] && $url[0]
            ]]></search>
            <add position="before"><![CDATA[
            if ($url[0] == 'blog_id') {$this->request->get['blog_id'] = $url[1]; }
            if ($url[0] == 'blog_category_id') {
                if (!isset($this->request->get['blogpath'])) {
                    $this->request->get['blogpath'] = $url[1];
                } else {
                    $this->request->get['blogpath'] .= '_' . $url[1];
                }
            }
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            != 'category_id' && $url[0]
            ]]></search>
            <add position="replace"><![CDATA[
            != 'category_id' && $url[0] != 'blog_category_id' && $url[0] != 'blog_id' && $url[0] 
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $this->request->get['route'] = 'product/product';
            ]]></search>
            <add position="after"><![CDATA[
            } elseif (isset($this->request->get['blog_id'])) {
                $this->request->get['route'] = 'extension/blog/blog';
            } elseif ($this->request->get['_route_'] ==  'extension_blog_home') { 
                $this->request->get['route'] = 'extension/blog/home';
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            $this->request->get['route'] = 'product/category';
            ]]></search>
            <add position="after"><![CDATA[
            } elseif (isset($this->request->get['blogpath'])) {
                $this->request->get['route'] = 'extension/blog/category';
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            ($data['route'] == 'information/information' && $key == 'information_id'))
            ]]></search>
            <add position="replace"><![CDATA[
            ($data['route'] == 'information/information' && $key == 'information_id') || ($data['route'] == 'extension/blog/blog' && $key == 'blog_id'))
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            } elseif ($key == 'path') {
            ]]></search>
            <add position="before"><![CDATA[
            } elseif ($key == 'blogpath') {
                $blog_categories = explode('_', $value);
                foreach ($blog_categories as $category) {
                    $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "seo_url WHERE `query` = 'blog_category_id=" . (int)$category . "'");
                    if ($query->num_rows) {
                        $url .= '/' . $query->row['keyword'];
                    } else {
                        $url = '';
                        break;
                    }
                }
                unset($data[$key]);
            } elseif (isset($data['route']) && $data['route'] ==   'extension/blog/home') {
                $blog_home = $this->db->query("SELECT * FROM " . DB_PREFIX . "seo_url WHERE `query` = 'extension/blog/home'");
                if ($blog_home->num_rows) {
                    $url .= '/' . $blog_home->row['keyword'];
                } else {
                    $url = '';
                }
            ]]></add>
        </operation>
    </file>

    <file path="admin/view/template/common/filemanager.twig">
        <operation>
            <search><![CDATA[.val($(this).parent().find('input').val());]]></search>
            <add position="replace"><![CDATA[.val($(this).parent().find('input').val()).trigger('change');]]></add>
        </operation>
    </file>

    <file path="admin/controller/design/layout.php">
        <operation error="log">
            <search><![CDATA[design/layout_form]]></search>
            <add position="replace"><![CDATA[extension/oxyo/oxyo_layout_form]]></add>
        </operation>
    </file>

    <file path="admin/controller/common/column_left.php">
        <operation error="log">
            <search><![CDATA[
            if ($marketplace) {
            ]]></search>
            <add position="before"><![CDATA[
            // Oxyo
            $oxyo = array();
            if ($this->user->hasPermission('access', 'extension/oxyo/oxyo')) {
                $oxyo[] = array(
                    'name'     => 'Theme Settings',
                    'href'     => $this->url->link('extension/oxyo/oxyo', 'user_token=' . $this->session->data['user_token'], true),
                    'children' => array()        
                );    
            }
            if ($this->user->hasPermission('access', 'extension/oxyo/question')) {
                $oxyo[] = array(
                    'name'     => 'Product Questions',
                    'href'     => $this->url->link('extension/oxyo/question', 'user_token=' . $this->session->data['user_token'], true),
                    'children' => array()        
                );    
            }
            if ($this->user->hasPermission('access', 'extension/oxyo/product_tabs')) {
                $oxyo[] = array(
                    'name'     => 'Product Tabs',
                    'href'     => $this->url->link('extension/oxyo/product_tabs', 'user_token=' . $this->session->data['user_token'], true),
                    'children' => array()        
                );    
            }
            if ($this->user->hasPermission('access', 'extension/oxyo/testimonial')) {
                $oxyo[] = array(
                    'name'     => 'Testimonials',
                    'href'     => $this->url->link('extension/oxyo/testimonial', 'user_token=' . $this->session->data['user_token'], true),
                    'children' => array()        
                );    
            }
            if ($this->user->hasPermission('access', 'extension/oxyo/subscriber')) {
                $oxyo[] = array(
                    'name'     => 'Mail Subscribers',
                    'href'     => $this->url->link('extension/oxyo/subscriber', 'user_token=' . $this->session->data['user_token'], true),
                    'children' => array()        
                );    
            }
            if ($this->user->hasPermission('access', 'extension/oxyo/productgroups')) {
                $oxyo[] = array(
                    'name'     => 'Product Groups',
                    'href'     => $this->url->link('extension/oxyo/productgroups', 'user_token=' . $this->session->data['user_token'], true),
                    'children' => array()        
                );    
            }
            if ($oxyo) {
                $marketplace[] = array(
                    'name'     => 'Oxyo Theme',
                    'href'     => '',
                    'children' => $oxyo    
                );
            }

            // Blog    
            $blog = array();
            if ($this->user->hasPermission('access', 'extension/blog/blog_setting')) {
                $blog[] = array(
                    'name'     => 'Blog Settings',
                    'href'     => $this->url->link('extension/blog/blog_setting', 'user_token=' . $this->session->data['user_token'], true),
                    'children' => array()        
                );    
            }
            if ($this->user->hasPermission('access', 'extension/blog/blog')) {
                $blog[] = array(
                    'name'     => 'Blog Posts',
                    'href'     => $this->url->link('extension/blog/blog', 'user_token=' . $this->session->data['user_token'], true),
                    'children' => array()        
                );    
            }
            if ($this->user->hasPermission('access', 'extension/blog/blog_comment')) {
                $blog[] = array(
                    'name'     => 'Blog Comments',
                    'href'     => $this->url->link('extension/blog/blog_comment', 'user_token=' . $this->session->data['user_token'], true),
                    'children' => array()        
                );    
            }
            if ($this->user->hasPermission('access', 'extension/blog/blog_category')) {
                $blog[] = array(
                    'name'     => 'Blog Categories',
                    'href'     => $this->url->link('extension/blog/blog_category', 'user_token=' . $this->session->data['user_token'], true),
                    'children' => array()        
                );    
            }

            if ($blog) {
                $marketplace[] = array(
                    'name'     => 'Blog',
                    'href'     => '',
                    'children' => $blog    
                );
            }
            ]]></add>
        </operation>
    </file>

    <file path="catalog/controller/common/content_top.php">
        <operation>
            <search><![CDATA[
            $layout_id = 0;
            ]]></search>
            <add position="after"><![CDATA[
            if ($route == 'extension/blog/blog' && isset($this->request->get['blog_id'])) { 
                $this->load->model('extension/blog/blog');
                $layout_id = $this->model_extension_blog_blog->getBlogLayoutId($this->request->get['blog_id']);
            }
            if ($route == 'extension/blog/category' && isset($this->request->get['blogpath'])) { 
                $this->load->model('extension/blog/blog_category');
                $layout_id = $this->model_extension_blog_blog_category->getBlogCategoryLayoutId($this->request->get['blogpath']);
            }
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/common/content_bottom.php">
        <operation>
            <search><![CDATA[
            $layout_id = 0;
            ]]></search>
            <add position="after"><![CDATA[
            if ($route == 'extension/blog/blog' && isset($this->request->get['blog_id'])) { 
                $this->load->model('extension/blog/blog');
                $layout_id = $this->model_extension_blog_blog->getBlogLayoutId($this->request->get['blog_id']);
            }
            if ($route == 'extension/blog/category' && isset($this->request->get['blogpath'])) { 
                $this->load->model('extension/blog/blog_category');
                $layout_id = $this->model_extension_blog_blog_category->getBlogCategoryLayoutId($this->request->get['blogpath']);
            }
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/common/column_left.php">
        <operation>
            <search><![CDATA[
            $layout_id = 0;
            ]]></search>
            <add position="after"><![CDATA[
            if ($route == 'extension/blog/blog' && isset($this->request->get['blog_id'])) { 
                $this->load->model('extension/blog/blog');
                $layout_id = $this->model_extension_blog_blog->getBlogLayoutId($this->request->get['blog_id']);
            }
            if ($route == 'extension/blog/category' && isset($this->request->get['blogpath'])) { 
                $this->load->model('extension/blog/blog_category');
                $layout_id = $this->model_extension_blog_blog_category->getBlogCategoryLayoutId($this->request->get['blogpath']);
            }
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/common/column_right.php">
        <operation>
            <search><![CDATA[
            $layout_id = 0;
            ]]></search>
            <add position="after"><![CDATA[
            if ($route == 'extension/blog/blog' && isset($this->request->get['blog_id'])) { 
                $this->load->model('extension/blog/blog');
                $layout_id = $this->model_extension_blog_blog->getBlogLayoutId($this->request->get['blog_id']);
            }
            if ($route == 'extension/blog/category' && isset($this->request->get['blogpath'])) { 
                $this->load->model('extension/blog/blog_category');
                $layout_id = $this->model_extension_blog_blog_category->getBlogCategoryLayoutId($this->request->get['blogpath']);
            }
            ]]></add>
        </operation>
    </file>

    <file path="catalog/controller/extension/module/category.php">
        <operation>
            <search><![CDATA[
            if ($category['category_id'] == $data['category_id']) {
            ]]></search>
            <add position="replace"><![CDATA[
            if ($this->config->get('theme_default_directory') == 'oxyo') {
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            foreach($children as $child) {
            ]]></search>
            <add position="after"><![CDATA[
            $grandchildren_data = array();
            $grandchildren = $this->model_catalog_category->getCategories($child['category_id']);
            foreach ($grandchildren as $grandchild) {
                if ($this->config->get('config_product_count')) {
                    $total = ' (' . $this->model_catalog_product->getTotalProducts(array('filter_category_id'  => $grandchild['category_id'])). ')';
                } else {
                    $total = '';
                }
                $grandchildren_data[] = array(
                    'name' => $grandchild['name'] . $total,
                    'href' => $this->url->link('product/category', 'path=' . $category['category_id'] . '_' . $child['category_id'] . '_' . $grandchild['category_id'])
                );
            }
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[
            'category_id' => $child['category_id'],
            ]]></search>
            <add position="after"><![CDATA[
            'grandchildren' => $grandchildren_data,
            ]]></add>
        </operation>
    </file>

    <file path="catalog/controller/checkout/cart.php">
        <operation error="log">
            <search><![CDATA[
                $data['modules'][] = $result;
            ]]></search>
            <add position="replace"><![CDATA[
                $data['modules'][basename($file, '.php')] = $result;
            ]]></add>
        </operation>
        <operation error="log">
            <search><![CDATA[
                $data['totals'] = array();
            ]]></search>
            <add position="before"><![CDATA[
                $img_size = $this->getCartImageSize();
                $data['img_width'] = $img_size['width'];
                $data['img_height'] = $img_size['height'];
            ]]></add>
        </operation>
        <operation error="log">
            <search><![CDATA[
                'title' => $total['title'],
                ]]></search>
            <add position="before"><![CDATA[
                'code'  => $total['code'],
            ]]></add>
        </operation>
        <operation error="log">
            <search><![CDATA[
                public function edit()
            ]]></search>
            <add position="before"><![CDATA[
                // Oxyo cart image size
                private function getCartImageSize()
                {
                    // Get current theme
                    $theme = $this->config->get('config_theme');
                    // Fallback for older OC versions
                    if (!$theme) {
                        $theme = $this->config->get('theme_default_directory');
                    }

                    $width  = (int)$this->config->get('theme_' . $theme . '_image_cart_width');
                    $height = (int)$this->config->get('theme_' . $theme . '_image_cart_height');

                    // Default fallback if not set
                    if (!$width || !$height) {
                        $width  = 50;
                        $height = 50;
                    }

                    return [
                        'width'  => $width,
                        'height' => $height
                    ];
                }            

                // Oxyo cart update
                public function ajaxUpdate()
                {
                    $this->load->language('checkout/cart');

                    $json = array();

                    // Update
                    if (!empty($this->request->post['quantity'])) {
                        foreach ($this->request->post['quantity'] as $key => $value) {
                            $this->cart->update($key, $value);
                        }

                        if (!$this->cart->hasStock() && (!$this->config->get('config_stock_checkout') || $this->config->get('config_stock_warning'))) {
                            $json['error_warning'] = $this->language->get('error_stock');
                        } elseif (isset($this->session->data['error'])) {
                            $json['error_warning'] = $this->session->data['error'];

                            unset($this->session->data['error']);
                        }                        

                        if (isset($this->session->data['success'])) {
                            unset($this->session->data['success']);
                        }

                        unset($this->session->data['shipping_method']);
                        unset($this->session->data['shipping_methods']);
                        unset($this->session->data['payment_method']);
                        unset($this->session->data['payment_methods']);
                        unset($this->session->data['reward']);

                        // $this->response->redirect($this->url->link('checkout/cart'));

                        // Prepare response
                        $cart_products = $this->cart->getProducts();
                        $json['products'] = array();

                        foreach ($cart_products as $product) {
                            $unit_price = $this->tax->calculate($product['price'], $product['tax_class_id'], $this->config->get('config_tax'));
                            $total_price = $unit_price * $product['quantity'];

                            $json['products'][$product['cart_id']] = array(
                                'stock'    => $product['stock'],
                                'quantity' => $product['quantity'],
                                'total'    => $this->currency->format($total_price, $this->session->data['currency'])
                            );
                        }

                        // Calculate totals
                        $this->load->model('setting/extension');
                        $totals = array();
                        $taxes = $this->cart->getTaxes();
                        $total = 0;

                        $total_data = array(
                            'totals' => &$totals,
                            'taxes'  => &$taxes,
                            'total'  => &$total
                        );

                        if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
                            $results = $this->model_setting_extension->getExtensions('total');

                            $sort_order = array();
                            foreach ($results as $key => $value) {
                                $sort_order[$key] = $this->config->get('total_' . $value['code'] . '_sort_order');
                            }
                            array_multisort($sort_order, SORT_ASC, $results);

                            foreach ($results as $result) {
                                if ($this->config->get('total_' . $result['code'] . '_status')) {
                                    $this->load->model('extension/total/' . $result['code']);
                                    $this->{'model_extension_total_' . $result['code']}->getTotal($total_data);
                                }
                            }
                        }

                        $json['totals'] = array();
                        foreach ($totals as $t) {
                            $json['totals'][$t['code']] = array(
                                'title' => $t['title'],
                                'text'  => $this->currency->format($t['value'], $this->session->data['currency'])
                            );
                        }
                    }

                    $this->response->addHeader('Content-Type: application/json');
                    $this->response->setOutput(json_encode($json));
                }
            // End Basel cart update
            ]]></add>
        </operation>
    </file>    

    <file path="admin/controller/startup/permission.php">
        <operation>
            <search><![CDATA[$extension = array(]]></search>
            <add position="after"><![CDATA['extension/oxyo','extension/blog',]]></add>
        </operation>
    </file>

    <file path="admin/model/customer/customer.php">
        <operation>
            <search index="0"><![CDATA[
                return $query->rows;
            ]]></search>
            <add position="replace"><![CDATA[
                if (!empty($data['filter_newsletter'])) {
                    $subscriber_list = $this->db->query("SELECT email FROM " . DB_PREFIX . "newsletter" );
                    return array_merge($subscriber_list->rows, $query->rows);
                } else {
                    return $query->rows;
                }
            ]]></add>
        </operation>
    </file>
    <file path="catalog/model/account/customer.php">
        <operation>
            <search><![CDATA[
                public function addCustomer($data) {
            ]]></search>
            <add position="after"><![CDATA[
                if (!empty($data['email'])) {
                    $this->db->query("DELETE FROM " . DB_PREFIX . "newsletter WHERE email = '" . $this->db->escape($data['email']) . "'");
                }
            ]]></add>
        </operation>
    </file>
    <file path="catalog/model/catalog/product.php">
        <operation>
            <search><![CDATA[
                if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
            ]]></search>
            <add position="replace"><![CDATA[
                if (!empty($data['sort']) && $data['sort'] == 'p.sale') {
                    // Sort by special products first (those with active discount)
                    $sql .= " ORDER BY (special IS NOT NULL) DESC, special";
                } elseif (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
                ]]>
            </add>
        </operation>
    </file>
</modification>